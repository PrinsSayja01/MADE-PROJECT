pipeline TemperaturePipeline
{
    TemperatureExtractor
        ->TemperatureZipInterpreter
        ->TemperatureDataPicker
        ->TemperatureTextInterpreter
        ->TemperatureCSVInterpreter
        ->TemperatureRenameTemp
        ->TemperatureRenameBatteriesTemp
        ->TemperatureColDataSelector
        ->TemperatureColDeleter
        ->TemperatureTableDataInterpreter
        ->TemperatureTransformerA
        ->TemperatureTransformerB
        ->TemperatureLoader;


    block TemperatureExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip"; 
        }
    block TemperatureZipInterpreter oftype ArchiveInterpreter { 
        archiveType: "zip";
        }

    block TemperatureDataPicker oftype FilePicker { 
        path: "/data.csv";
        }

    block TemperatureTextInterpreter oftype TextFileInterpreter {}

    block TemperatureCSVInterpreter oftype CSVInterpreter {
        delimiter: ";"; 
        }

    block TemperatureRenameTemp oftype CellWriter {
        at: cell E1;
        write: ["temperature"]; 
    }

    block TemperatureRenameBatteriesTemp oftype CellWriter {
        at: cell J1;
        write: ["battery_temperature"]; 
    }  

    block TemperatureColDeleter oftype ColumnDeleter { 
        delete: [column F, column G, column H, column I]; 
    }

    block TemperatureColDataSelector oftype CellRangeSelector {
        select: range A1:K*;
    }

    constraint Valididconstraint oftype RangeConstraint {
        lowerBound: 0;
        lowerBoundInclusive: false;
    }

    valuetype ValididType oftype integer {
        constraints: [ Valididconstraint ];
    } 

    block TemperatureTableDataInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "id" oftype ValididType,
            "producer" oftype text, 
            "model" oftype text, 
            "month" oftype integer,
            "temperature" oftype decimal, 
            "battery_temperature" oftype decimal
        ];
    }
    
    transform CelsiusToFahrenheit {
        from tempCelsius oftype decimal;
        to tempFahrenheit oftype decimal;
        tempFahrenheit: (tempCelsius * 9/5) + 32;
   }
   
    block TemperatureTransformerA oftype TableTransformer {
        inputColumns: ['temperature'];
        outputColumn: 'temperature';
        use: CelsiusToFahrenheit;
   }
   block TemperatureTransformerB oftype TableTransformer {
        inputColumns: ['battery_temperature'];
        outputColumn: 'battery_temperature';
        use: CelsiusToFahrenheit;
   }

    block TemperatureLoader oftype SQLiteLoader 
    { 
        table: "temperatures"; 
        file: "./temperatures.sqlite"; 
    }


}
